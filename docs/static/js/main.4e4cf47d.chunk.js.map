{"version":3,"sources":["logo.svg","redux/reducers/ui.js","redux/reducers/searchForm.js","lib/data-normalise/searchResults.js","redux/index.js","redux/actions/searchForm.js","redux/reducers/searchResults.js","components/presentational/SearchForm/SearchForm.jsx","components/container/ConnectedSearchForm/ConnectedSearchForm.js","components/presentational/SearchResults/SearchResults.jsx","components/container/ConnectedSearchResults/ConnectedSearchResults.js","components/presentational/AlertMessage/AlertMessage.jsx","components/container/ConnectedAlertMessage/ConnectedAlertMessage.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","defaultState","alert","isVisible","message","userInput","isLoading","normaliseSearchResults","item","name","html_url","description","updated_at","homepage","stargazers_count","stargazers_count_formatted","toLocaleString","owner","login","avatar_url","rootReducer","combineReducers","ui","state","arguments","length","undefined","payload","type","Object","objectSpread","searchForm","input","searchResults","results","map","sort","a","b","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","FormItem","Form","Item","SearchForm","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","submit","event","_this$props","props","onSubmit","preventDefault","inherits","createClass","key","value","_this$props2","onChange","react_default","createElement","es_form","className","layout","es_input","placeholder","es_button","loading","onClick","Component","defaultProps","ConnectedSearchForm","connect","ownProps","dispatch","target","fetch","then","response","json","error","_ref","items","submitSearch","ListItem","List","ListItemMeta","Meta","IconText","text","react","icon","style","marginRight","SearchResults","_PureComponent","header","list","itemLayout","dataSource","renderItem","actions","SearchResults_IconText","avatar","src","title","href","rel","PureComponent","ConnectedSearchResults","AlertMessage","es_alert","showIcon","ConnectedAlertMessage","_state$ui$alert","App","logo","alt","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.4e4cf47d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.317e1160.svg\";","import {\r\n  REQUEST_SEARCH,\r\n  ERROR_SEARCH,\r\n  RECIEVE_NO_SEARCH_RESULTS\r\n} from \"redux/actions/searchForm\";\r\n\r\nconst defaultState = {\r\n  alert: {\r\n    isVisible: false,\r\n    message: null\r\n  }\r\n};\r\n\r\nexport const ui = (state = defaultState, payload) => {\r\n  switch (payload.type) {\r\n    case REQUEST_SEARCH:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          ...state.alert,\r\n          isVisible: false\r\n        }\r\n      };\r\n    case RECIEVE_NO_SEARCH_RESULTS:\r\n    case ERROR_SEARCH:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          ...state.alert,\r\n          isVisible: true,\r\n          message: payload.message\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CHANGE_SEARCH_INPUT,\r\n  REQUEST_SEARCH,\r\n  ERROR_SEARCH,\r\n  RECIEVE_SEARCH_RESULTS,\r\n  RECIEVE_NO_SEARCH_RESULTS\r\n} from \"redux/actions/searchForm\";\r\n\r\nconst defaultState = {\r\n  userInput: \"\",\r\n  isLoading: false\r\n};\r\n\r\nexport const searchForm = (state = defaultState, payload) => {\r\n  switch (payload.type) {\r\n    case CHANGE_SEARCH_INPUT:\r\n      return {\r\n        ...state,\r\n        userInput: payload.input\r\n      };\r\n    case REQUEST_SEARCH:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case RECIEVE_NO_SEARCH_RESULTS:\r\n    case RECIEVE_SEARCH_RESULTS:\r\n    case ERROR_SEARCH:\r\n      return {\r\n        ...state,\r\n        isLoading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const normaliseSearchResults = item => {\r\n  return {\r\n    name: item.name,\r\n    html_url: item.html_url,\r\n    description: item.description,\r\n    updated_at: item.updated_at,\r\n    homepage: item.homepage,\r\n    stargazers_count: item.stargazers_count,\r\n    stargazers_count_formatted: item.stargazers_count.toLocaleString(\"en-GB\"),\r\n    owner: {\r\n      login: item.owner.login,\r\n      avatar_url: item.owner.avatar_url,\r\n      html_url: item.owner.html_url\r\n    }\r\n  };\r\n};\r\n","import { applyMiddleware, createStore, combineReducers, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { ui, searchForm, searchResults } from \"redux/reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  ui,\r\n  searchForm,\r\n  searchResults\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","export const CHANGE_SEARCH_INPUT = \"CHANGE_SEARCH_INPUT\";\r\nexport const REQUEST_SEARCH = \"REQUEST_SEARCH\";\r\nexport const ERROR_SEARCH = \"ERROR_SEARCH\";\r\nexport const RECIEVE_SEARCH_RESULTS = \"RECIEVE_SEARCH_RESULTS\";\r\nexport const RECIEVE_NO_SEARCH_RESULTS = \"RECIEVE_NO_SEARCH_RESULTS\";\r\nexport const SUBMIT_SEARCH = \"SUBMIT_SEARCH\";\r\n\r\nexport const changeSearchInput = input => ({\r\n  type: CHANGE_SEARCH_INPUT,\r\n  input\r\n});\r\n\r\nexport const requestSearch = () => ({\r\n  type: REQUEST_SEARCH\r\n});\r\n\r\nexport const errorSearch = message => ({\r\n  type: ERROR_SEARCH,\r\n  message\r\n});\r\n\r\nexport const recieveSearchResults = results => ({\r\n  type: RECIEVE_SEARCH_RESULTS,\r\n  results\r\n});\r\n\r\nexport const recieveNoSearchResults = () => ({\r\n  type: RECIEVE_NO_SEARCH_RESULTS,\r\n  message: \"No search results found!\"\r\n});\r\n\r\nexport const submitSearch = input => dispatch => {\r\n  dispatch(requestSearch());\r\n  return fetch(`https://api.github.com/search/repositories?q=${input}`)\r\n    .then(response => response.json(), error => errorSearch(error.message))\r\n    .then(({ items }) => {\r\n      if (items && items.length > 0) {\r\n        dispatch(recieveSearchResults(items));\r\n      } else {\r\n        dispatch(recieveNoSearchResults());\r\n      }\r\n    });\r\n};\r\n","import { RECIEVE_SEARCH_RESULTS } from \"redux/actions/searchForm\";\r\nimport { normaliseSearchResults } from \"lib/data-normalise\";\r\n\r\nexport const searchResults = (state = [], payload) => {\r\n  switch (payload.type) {\r\n    case RECIEVE_SEARCH_RESULTS:\r\n      return payload.results.map(normaliseSearchResults).sort((a, b) => {\r\n        return b.stargazers_count - a.stargazers_count;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { bool, func, string } from \"prop-types\";\r\nimport { Button, Form, Input } from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport class SearchForm extends Component {\r\n  static propTypes = {\r\n    userInput: string,\r\n    isLoading: bool,\r\n\r\n    onChange: func.isRequired,\r\n    onSubmit: func.isRequired\r\n  };\r\n  static defaultProps = {\r\n    userInput: null,\r\n    isLoading: false\r\n  };\r\n\r\n  submit = event => {\r\n    const { userInput, onSubmit } = this.props;\r\n    event.preventDefault();\r\n    onSubmit(userInput);\r\n  };\r\n\r\n  render() {\r\n    const { userInput, isLoading, onChange } = this.props;\r\n\r\n    return (\r\n      <Form className=\"SearchForm\" layout=\"inline\" onSubmit={this.submit}>\r\n        <FormItem>\r\n          <Input\r\n            className=\"SearchForm__input\"\r\n            placeholder=\"Search repositories\"\r\n            value={userInput}\r\n            onChange={onChange}\r\n          />\r\n        </FormItem>\r\n        <FormItem>\r\n          <Button\r\n            className=\"SearchForm__button\"\r\n            type=\"primary\"\r\n            loading={isLoading}\r\n            onClick={this.submit}\r\n          >\r\n            Search\r\n          </Button>\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport { changeSearchInput, submitSearch } from \"redux/actions\";\r\nimport { SearchForm } from \"components/presentational/SearchForm\";\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    ...state.searchForm\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onChange: event => dispatch(changeSearchInput(event.target.value)),\r\n    onSubmit: input => dispatch(submitSearch(input))\r\n  };\r\n};\r\n\r\nexport const ConnectedSearchForm = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SearchForm);\r\n","import React, { Fragment, PureComponent } from \"react\";\r\nimport { arrayOf, bool, number, shape, string } from \"prop-types\";\r\nimport { List, Avatar, Icon } from \"antd\";\r\n\r\nconst ListItem = List.Item;\r\nconst ListItemMeta = ListItem.Meta;\r\n\r\nconst IconText = ({ type, text }) => (\r\n  <Fragment>\r\n    <Icon type={type} style={{ marginRight: 8 }} />\r\n    {text}\r\n  </Fragment>\r\n);\r\n\r\nexport class SearchResults extends PureComponent {\r\n  static propTypes = {\r\n    isLoading: bool,\r\n    results: arrayOf(\r\n      shape({\r\n        name: string,\r\n        html_url: string,\r\n        description: string,\r\n        updated_at: string,\r\n        homepage: string,\r\n        stargazers_count: number,\r\n        stargazers_count_formatted: string,\r\n        owner: shape({\r\n          login: string,\r\n          avatar_url: string,\r\n          html_url: string\r\n        })\r\n      })\r\n    ).isRequired\r\n  };\r\n  static defaultProps = {\r\n    isLoading: false\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, results } = this.props;\r\n\r\n    const header =\r\n      results.length > 0 ? `Showing ${results.length} results` : null;\r\n\r\n    return (\r\n      <Fragment>\r\n        <List\r\n          className=\"SearchResults__list\"\r\n          header={header}\r\n          loading={isLoading}\r\n          itemLayout=\"vertical\"\r\n          dataSource={results}\r\n          renderItem={item => (\r\n            <ListItem\r\n              className=\"SearchResults__item\"\r\n              actions={[\r\n                <IconText\r\n                  type=\"star-o\"\r\n                  text={item.stargazers_count_formatted}\r\n                />\r\n              ]}\r\n            >\r\n              <ListItemMeta\r\n                className=\"SearchResults__meta\"\r\n                avatar={<Avatar src={item.owner.avatar_url} />}\r\n                title={\r\n                  <a href={item.html_url} rel=\"noopener\">\r\n                    {item.name} <small>({item.owner.login})</small>\r\n                  </a>\r\n                }\r\n              />\r\n              {item.description}\r\n            </ListItem>\r\n          )}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport { SearchResults } from \"components/presentational/SearchResults\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: state.searchForm.isLoading,\r\n    results: state.searchResults\r\n  };\r\n};\r\n\r\nexport const ConnectedSearchResults = connect(mapStateToProps)(SearchResults);\r\n","import React, { PureComponent } from \"react\";\r\nimport { bool, string } from \"prop-types\";\r\nimport { Alert } from \"antd\";\r\n\r\nexport class AlertMessage extends PureComponent {\r\n  static propTypes = {\r\n    isVisible: bool,\r\n    message: string\r\n  };\r\n  static defaultProps = {\r\n    isVisible: false,\r\n    message: null\r\n  };\r\n\r\n  render() {\r\n    const { isVisible, message } = this.props;\r\n    return isVisible ? <Alert message={message} showIcon /> : null;\r\n  }\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport { AlertMessage } from \"components/presentational/AlertMessage\";\r\n\r\nconst mapStateToProps = state => {\r\n  const { isVisible, message } = state.ui.alert;\r\n  return {\r\n    isVisible,\r\n    message\r\n  };\r\n};\r\n\r\nexport const ConnectedAlertMessage = connect(mapStateToProps)(AlertMessage);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { ConnectedSearchForm } from \"components/container/ConnectedSearchForm\";\r\nimport { ConnectedSearchResults } from \"components/container/ConnectedSearchResults\";\r\nimport { ConnectedAlertMessage } from \"components/container/ConnectedAlertMessage\";\r\n\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.scss\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App__header\">\r\n          <img src={logo} className=\"App__logo\" alt=\"logo\" />\r\n          <ConnectedSearchForm />\r\n        </header>\r\n        <main className=\"App__main\">\r\n          <ConnectedAlertMessage />\r\n          <ConnectedSearchResults />\r\n        </main>\r\n        <footer className=\"App__footer\">\r\n          <p>Simple application for searching repositories via Github API.</p>\r\n          <p>\r\n            <a href=\"https://github.com/coogie/gh-explorer\">\r\n              Source available on Github\r\n            </a>{\" \"}\r\n            under MIT licence\r\n          </p>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { store } from \"./redux\";\r\nimport App from \"./App\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.scss\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}