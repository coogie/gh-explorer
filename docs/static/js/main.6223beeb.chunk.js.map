{"version":3,"sources":["logo.svg","redux/helpers/createNetworkAction.js","redux/actions/searchForm.js","redux/reducers/searchForm.js","lib/data-normalise/searchResults.js","redux/index.js","redux/reducers/searchResults.js","components/presentational/SearchForm/SearchForm.jsx","components/container/ConnectedSearchForm/ConnectedSearchForm.js","components/presentational/SearchResults/SearchResults.jsx","components/container/ConnectedSearchResults/ConnectedSearchResults.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","createAction","actionName","_ref","action","upperCase","Object","defineProperty","camelCase","payload","type","createNetworkAction","name","objectSpread","concat","FetchError","response","_this","classCallCheck","this","_len","arguments","length","params","Array","_key","possibleConstructorReturn","getPrototypeOf","call","console","log","message","status","Error","endpoint","General","input","Specific","asyncActions","actions_searchForm","CHANGE_SEARCH_INPUT","changeSearchInput","SUBMIT_SEARCH","submitSearch","dispatch","indexOf","searchSuccess","data","items","fetch","apply","then","ok","wrappedFetch","json","error","defaultState","userInput","isLoading","alert","isVisible","normaliseSearchResults","html_url","description","updated_at","homepage","stargazers_count","_ref$subscribers_coun","subscribers_count","forks_count","owner","score","login","avatar_url","rootReducer","combineReducers","searchForm","newState","state","undefined","actions","SEARCH_GENERAL_REQUEST","SEARCH_SPECIFIC_REQUEST","SEARCH_GENERAL_RESPONSE","SEARCH_SPECIFIC_RESPONSE","SEARCH_GENERAL_ERROR","SEARCH_SPECIFIC_ERROR","searchResults","map","sort","a","b","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","FormItem","Form","Item","SearchForm","_PureComponent","_getPrototypeOf2","args","submit","event","_this$props","props","onSubmit","preventDefault","inherits","createClass","key","value","_this$props2","onChange","react_default","createElement","className","es_alert","showIcon","es_form","layout","es_input","placeholder","es_button","loading","onClick","PureComponent","defaultProps","ConnectedSearchForm","connect","ownProps","target","ListItem","List","ListItemMeta","Meta","IconText","text","react","icon","style","marginRight","toLocaleString","SearchResults","renderActions","item","SearchResults_IconText","push","_this2","results","header","list","itemLayout","dataSource","renderItem","avatar","src","title","href","rel","ConnectedSearchResults","App","logo","alt","Component","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6223beeb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.317e1160.svg\";","import { upperCase, camelCase } from \"change-case\";\r\n\r\nconst createAction = actionName => {\r\n  const action = upperCase(actionName);\r\n\r\n  return {\r\n    [action]: action,\r\n    [camelCase(actionName)]: payload => ({\r\n      type: action,\r\n      payload\r\n    })\r\n  };\r\n};\r\n\r\nexport const createNetworkAction = name => ({\r\n  ...createAction(`${name}_REQUEST`),\r\n  ...createAction(`${name}_RESPONSE`),\r\n  ...createAction(`${name}_ERROR`)\r\n});\r\n\r\nclass FetchError extends Error {\r\n  constructor(response, ...params) {\r\n    super(params);\r\n    console.log(response);\r\n    this.message = `HTTP status code: ${response.status}`;\r\n    this.status = response.status;\r\n    this.response = response;\r\n  }\r\n}\r\n\r\nexport function wrappedFetch() {\r\n  return fetch.apply(null, arguments).then(response => {\r\n    if (!response.ok) {\r\n      throw new FetchError(response);\r\n    }\r\n\r\n    return response;\r\n  });\r\n}\r\n","import { createNetworkAction, wrappedFetch } from \"../helpers\";\r\n\r\nconst endpoint = {\r\n  General: input => `https://api.github.com/search/repositories?q=${input}`,\r\n  Specific: input => `https://api.github.com/repos/${input}`\r\n};\r\n\r\nconst asyncActions = {\r\n  ...createNetworkAction(\"SEARCH_GENERAL\"),\r\n  ...createNetworkAction(\"SEARCH_SPECIFIC\")\r\n};\r\n\r\nconst CHANGE_SEARCH_INPUT = \"CHANGE_SEARCH_INPUT\";\r\nconst changeSearchInput = input => ({\r\n  type: CHANGE_SEARCH_INPUT,\r\n  payload: input\r\n});\r\n\r\nconst SUBMIT_SEARCH = \"SUBMIT_SEARCH\";\r\nconst submitSearch = input => dispatch => {\r\n  const type = input.indexOf(\"/\") > 0 ? \"Specific\" : \"General\";\r\n  const searchSuccess = data => {\r\n    const payload = {\r\n      General: data.items,\r\n      Specific: data\r\n    };\r\n    return dispatch(asyncActions[`search${type}Response`](payload[type]));\r\n  };\r\n\r\n  dispatch(asyncActions[`search${type}Request`]());\r\n\r\n  return wrappedFetch(endpoint[type](input)).then(\r\n    response => response.json().then(searchSuccess),\r\n    error => {\r\n      console.log(error);\r\n      const message = error.status === 404 ? \"Repo not found\" : error.message;\r\n      dispatch(asyncActions[`search${type}Error`](message));\r\n    }\r\n  );\r\n};\r\n\r\nexport default {\r\n  CHANGE_SEARCH_INPUT,\r\n  changeSearchInput,\r\n  SUBMIT_SEARCH,\r\n  submitSearch,\r\n  ...asyncActions\r\n};\r\n","import actions from \"redux/actions/searchForm\";\r\n\r\nconst defaultState = {\r\n  userInput: \"\",\r\n  isLoading: false,\r\n  alert: {\r\n    isVisible: false,\r\n    message: null\r\n  }\r\n};\r\n\r\nexport const searchForm = (state = defaultState, { type, payload }) => {\r\n  let newState;\r\n\r\n  switch (type) {\r\n    case actions.CHANGE_SEARCH_INPUT:\r\n      newState = {\r\n        ...state,\r\n        userInput: payload\r\n      };\r\n      break;\r\n    case actions.SEARCH_GENERAL_REQUEST:\r\n    case actions.SEARCH_SPECIFIC_REQUEST:\r\n      newState = {\r\n        ...state,\r\n        alert: {\r\n          ...defaultState.alert\r\n        },\r\n        isLoading: true\r\n      };\r\n      break;\r\n    case actions.SEARCH_GENERAL_RESPONSE:\r\n    case actions.SEARCH_SPECIFIC_RESPONSE:\r\n      newState = {\r\n        ...state,\r\n        isLoading: false\r\n      };\r\n      break;\r\n    case actions.SEARCH_GENERAL_ERROR:\r\n    case actions.SEARCH_SPECIFIC_ERROR:\r\n      newState = {\r\n        ...state,\r\n        isLoading: false,\r\n        alert: {\r\n          ...state.alert,\r\n          isVisible: true,\r\n          message: payload\r\n        }\r\n      };\r\n      break;\r\n    default:\r\n      newState = {\r\n        ...state\r\n      };\r\n  }\r\n\r\n  return newState;\r\n};\r\n","export const normaliseSearchResults = ({\r\n  name,\r\n  html_url,\r\n  description,\r\n  updated_at,\r\n  homepage,\r\n  stargazers_count,\r\n  subscribers_count = null,\r\n  forks_count,\r\n  owner,\r\n  score\r\n}) => ({\r\n  name,\r\n  html_url,\r\n  description,\r\n  updated_at,\r\n  homepage,\r\n  stargazers_count,\r\n  subscribers_count,\r\n  forks_count,\r\n  owner: {\r\n    login: owner.login,\r\n    avatar_url: owner.avatar_url,\r\n    html_url: owner.html_url\r\n  },\r\n  score\r\n});\r\n","import { applyMiddleware, createStore, combineReducers, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { searchForm, searchResults } from \"redux/reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  searchForm,\r\n  searchResults\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import actions from \"redux/actions/searchForm\";\r\nimport { normaliseSearchResults } from \"lib/data-normalise\";\r\n\r\nexport const searchResults = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case actions.SEARCH_GENERAL_RESPONSE:\r\n      return payload.map(normaliseSearchResults).sort((a, b) => {\r\n        return b.score - a.score;\r\n      });\r\n    case actions.SEARCH_SPECIFIC_RESPONSE:\r\n      return [normaliseSearchResults(payload)];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { PureComponent } from \"react\";\r\nimport { bool, func, string, shape } from \"prop-types\";\r\nimport { Alert, Button, Form, Input } from \"antd\";\r\n\r\nimport \"./SearchForm.scss\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport class SearchForm extends PureComponent {\r\n  static propTypes = {\r\n    userInput: string,\r\n    isLoading: bool,\r\n    alert: shape({\r\n      isVisible: bool,\r\n      message: string\r\n    }),\r\n\r\n    onChange: func.isRequired,\r\n    onSubmit: func.isRequired\r\n  };\r\n  static defaultProps = {\r\n    userInput: null,\r\n    isLoading: false\r\n  };\r\n\r\n  submit = event => {\r\n    const { userInput, onSubmit } = this.props;\r\n    event.preventDefault();\r\n    onSubmit(userInput);\r\n  };\r\n\r\n  render() {\r\n    const { userInput, isLoading, onChange, alert } = this.props;\r\n\r\n    return (\r\n      <div className=\"SearchForm o-container\">\r\n        {alert.isVisible && (\r\n          <Alert\r\n            className=\"SearchForm__alert\"\r\n            message={alert.message}\r\n            showIcon\r\n          />\r\n        )}\r\n        <Form\r\n          className=\"SearchForm__form\"\r\n          layout=\"inline\"\r\n          onSubmit={this.submit}\r\n        >\r\n          <FormItem>\r\n            <Input\r\n              className=\"SearchForm__input\"\r\n              placeholder=\"Search repositories\"\r\n              value={userInput}\r\n              onChange={onChange}\r\n            />\r\n          </FormItem>\r\n          <FormItem>\r\n            <Button\r\n              className=\"SearchForm__button\"\r\n              type=\"primary\"\r\n              loading={isLoading}\r\n              onClick={this.submit}\r\n            >\r\n              Search\r\n            </Button>\r\n          </FormItem>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport actions from \"redux/actions/searchForm\";\r\nimport { SearchForm } from \"components/presentational/SearchForm\";\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    ...state.searchForm\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onChange: event => dispatch(actions.changeSearchInput(event.target.value)),\r\n    onSubmit: input => dispatch(actions.submitSearch(input))\r\n  };\r\n};\r\n\r\nexport const ConnectedSearchForm = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SearchForm);\r\n","import React, { Fragment, PureComponent } from \"react\";\r\nimport { arrayOf, bool, number, shape, string } from \"prop-types\";\r\nimport { List, Avatar, Icon } from \"antd\";\r\n\r\nconst ListItem = List.Item;\r\nconst ListItemMeta = ListItem.Meta;\r\n\r\nconst IconText = ({ type, text }) => (\r\n  <Fragment>\r\n    <Icon type={type} style={{ marginRight: 8 }} />\r\n    {text.toLocaleString(\"en-GB\")}\r\n  </Fragment>\r\n);\r\n\r\nexport class SearchResults extends PureComponent {\r\n  static propTypes = {\r\n    isLoading: bool,\r\n    results: arrayOf(\r\n      shape({\r\n        name: string,\r\n        html_url: string,\r\n        description: string,\r\n        updated_at: string,\r\n        homepage: string,\r\n        stargazers_count: number,\r\n        stargazers_count_formatted: string,\r\n        owner: shape({\r\n          login: string,\r\n          avatar_url: string,\r\n          html_url: string\r\n        })\r\n      })\r\n    ).isRequired\r\n  };\r\n  static defaultProps = {\r\n    isLoading: false\r\n  };\r\n\r\n  renderActions = item => {\r\n    const actions = [\r\n      <IconText type=\"star-o\" text={item.stargazers_count} />,\r\n      <IconText type=\"fork\" text={item.forks_count} />\r\n    ];\r\n    if (item.subscribers_count) {\r\n      actions.push(<IconText type=\"eye\" text={item.subscribers_count} />);\r\n    }\r\n\r\n    return actions;\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, results } = this.props;\r\n\r\n    const header =\r\n      results.length > 0 ? `Showing ${results.length} results` : null;\r\n\r\n    return (\r\n      <Fragment>\r\n        <List\r\n          className=\"SearchResults__list\"\r\n          header={header}\r\n          loading={isLoading}\r\n          itemLayout=\"vertical\"\r\n          dataSource={results}\r\n          renderItem={item => (\r\n            <ListItem\r\n              className=\"SearchResults__item\"\r\n              actions={this.renderActions(item)}\r\n            >\r\n              <ListItemMeta\r\n                className=\"SearchResults__meta\"\r\n                avatar={<Avatar src={item.owner.avatar_url} />}\r\n                title={\r\n                  <a href={item.html_url} rel=\"noopener\">\r\n                    {item.name} <small>({item.owner.login})</small>\r\n                  </a>\r\n                }\r\n              />\r\n              {item.description}\r\n            </ListItem>\r\n          )}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport { SearchResults } from \"components/presentational/SearchResults\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: state.searchForm.isLoading,\r\n    results: state.searchResults\r\n  };\r\n};\r\n\r\nexport const ConnectedSearchResults = connect(mapStateToProps)(SearchResults);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { ConnectedSearchForm } from \"components/container/ConnectedSearchForm\";\r\nimport { ConnectedSearchResults } from \"components/container/ConnectedSearchResults\";\r\n\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.scss\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App__header\">\r\n          <img src={logo} className=\"App__logo\" alt=\"logo\" />\r\n          <ConnectedSearchForm />\r\n        </header>\r\n        <main className=\"App__main\">\r\n          <ConnectedSearchResults />\r\n        </main>\r\n        <footer className=\"App__footer\">\r\n          <p>Simple application for searching repositories via Github API.</p>\r\n          <p>\r\n            <a href=\"https://github.com/coogie/gh-explorer\">\r\n              Source available on Github\r\n            </a>{\" \"}\r\n            under MIT licence\r\n          </p>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { store } from \"./redux\";\r\nimport App from \"./App\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.scss\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}